<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winning.dao.CommentMapper">

	<insert id="createComment" parameterType="com.winning.bean.Comment"  useGeneratedKeys="true" keyProperty="comment.id">
		INSERT INTO  comments(
			comment_content,
			comment_person,
			comment_date,
			msg_id,
			floor_id
		)VALUES (
			#{comment.content},
			#{comment.user_id},
			#{comment.date},
			#{comment.message_id},
			#{comment.floor_id}
		)
	</insert>
	<update id="updateComment" parameterType="int">
		UPDATE comments
		<set>
			praise_num = praise_num+1
		</set>
		WHERE id = #{comment_id}
	</update>
	<insert id="createFloor" parameterType="com.winning.bean.Floor"  useGeneratedKeys="true" keyProperty="floor.id">
		INSERT into floors(
			msg_id,
			comment_ids
		)VALUES (
			#{floor.message_id},
			#{floor.comment_ids}
		)
	</insert>
	<select id="getFloor" parameterType="String" resultType="com.winning.bean.Floor">
		SELECT
		f.msg_id AS message_id,
		f.comment_ids,
		f.id
		FROM  floors AS f
		WHERE f.msg_id = #{message_id}
			AND id = #{floor_id}
	</select>
	<update id="updateFloor" parameterType="com.winning.bean.Floor">
		UPDATE floors
		<set>
			comment_ids = #{floor.comment_ids}
		</set>
		WHERE msg_id = #{floor.message_id}
		AND id = #{floor.id}
	</update>
	<select id="getAllFloor" parameterType="String" resultType="com.winning.bean.Floor">
		SELECT
		f.msg_id AS message_id,
		f.comment_ids,
		f.id
		FROM floors AS f
		WHERE f.msg_id = #{message_id}
		ORDER BY update_time DESC
	</select>
	<select id="getCommentById" parameterType="String" resultType="com.winning.bean.Comment">
		SELECT
		DISTINCT
		c.id,
		c.msg_id AS message_id,
		c.comment_date AS date,
		c.comment_content AS content,
		c.praise_num,
		c.comment_person AS user_id,
		c.floor_id,
		u.avatar AS url,
		u.nickname AS nick_name,
		cp.user_id AS praise_me_id
		from comments AS c
		LEFT JOIN user AS u
		ON c.comment_person = u.bmob_user_id
		LEFT JOIN comment_praise AS cp
		ON c.id = cp.comment_id AND cp.user_id = #{user_id}
		WHERE c.id = #{comment_id}
	</select>
	<update id="updateCommentFloor">
		UPDATE comments
		<set>
			floor_id = #{floor_id}
		</set>
		WHERE id = #{comment_id}
	</update>
	<select id="getHotComments" resultType="com.winning.bean.Comment">
		SELECT
		floor_id,
		praise_num
		FROM comments
		WHERE msg_id = #{message_id}
		AND praise_num > 0
		GROUP by floor_id
		ORDER BY praise_num DESC
		limit 5
	</select>
	<select id="getHotFloor"  resultType="com.winning.bean.Floor">
		SELECT
		f.msg_id AS message_id,
		f.comment_ids,
		f.id
		FROM floors AS f
		WHERE f.msg_id = #{message_id}
		AND f.id = #{floor_id}
	</select>
	<select id="getCommentCount" resultType="int">
		SELECT  count(*)
		FROM comments
		WHERE msg_id = #{message_id}
	</select>
	<insert id="createPraise" parameterType="com.winning.bean.CommentPraise" useGeneratedKeys="true" keyProperty="comment_praise.id">
		INSERT  INTO  comment_praise(
			user_id,
			message_id,
			comment_id
		)VALUES (
			#{comment_praise.user_id},
			#{comment_praise.message_id},
			#{comment_praise.comment_id}
		)
	</insert>
	<select id="getPraiseCount" parameterType="com.winning.bean.CommentPraise" resultType="int">
			select count(*) from comment_praise where  user_id = #{comment_praise.user_id} AND comment_id = #{comment_praise.comment_id} AND message_id = #{comment_praise.message_id}
	</select>
</mapper>